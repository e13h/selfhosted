services:
  frontend:
    image: ghcr.io/e13h/onelineaday-frontend:latest-devel
    depends_on:
      - backend
    network_mode: service:tailscale
    restart: unless-stopped

  backend:
    image: ghcr.io/e13h/onelineaday-backend:latest-devel
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - PORT=3000
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
      start_interval: 1s

  tailscale:
    image: tailscale/tailscale:latest
    hostname: onelineaday
    env_file:
      - .env
    environment:
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
      - TS_SERVE_CONFIG=/config/onelineaday.json
      - TS_STATE_DIR=/var/lib/tailscale
    volumes:
      - tailscale-state-onelineaday:/var/lib/tailscale
      - ./config:/config
    devices:
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - net_admin
      - sys_module
    restart: unless-stopped

volumes:
  postgres_data:
  tailscale-state-onelineaday:
    driver: local
