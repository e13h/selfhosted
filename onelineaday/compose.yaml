services:
  frontend:
    image: ghcr.io/e13h/onelineaday-frontend:latest-devel
    depends_on:
      - backend
    networks:
      - tsdproxy
      - onelineaday
    labels:
      tsdproxy.enable: "true"
      tsdproxy.name: "onelineaday"
      tsdproxy.ephemeral: "false"
    restart: unless-stopped

  backend:
    image: ghcr.io/e13h/onelineaday-backend:latest-devel
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - PORT=3000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - onelineaday
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - onelineaday
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
      start_interval: 1s

volumes:
  postgres_data:

networks:
  onelineaday:
  tsdproxy:
    external: true
